services:
  mysql:
    image: mysql:8.0
    container_name: workplan_mysql
    environment:
      MYSQL_ROOT_PASSWORD: iT12345$
      MYSQL_DATABASE: esp_tracker
      MYSQL_USER: jitdhana
      MYSQL_PASSWORD: iT12345$
      # Performance optimizations for MySQL
      MYSQL_INNODB_BUFFER_POOL_SIZE: 256M
      MYSQL_INNODB_LOG_FILE_SIZE: 64M
      MYSQL_INNODB_FLUSH_LOG_AT_TRX_COMMIT: 2
      MYSQL_INNODB_FLUSH_METHOD: O_DIRECT
      MYSQL_QUERY_CACHE_SIZE: 32M
      MYSQL_QUERY_CACHE_TYPE: 1
      MYSQL_MAX_CONNECTIONS: 200
    volumes:
      - mysql_data:/var/lib/mysql
      - "./backend/esp_tracker (6).sql:/docker-entrypoint-initdb.d/init.sql"
      # MySQL configuration for performance
      - ./mysql-config.cnf:/etc/mysql/conf.d/custom.cnf
    ports:
      - "3306:3306"
    networks:
      - workplan_network
    restart: unless-stopped
    # Health check for MySQL
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: workplan_backend
    ports:
      - "3101:3101"
    environment:
      DB_HOST: mysql
      DB_USER: jitdhana
      DB_PASSWORD: iT12345$
      DB_NAME: esp_tracker
      DB_PORT: 3306
      NODE_ENV: production
      PORT: 3101
      # Node.js performance optimizations
      NODE_OPTIONS: "--max-old-space-size=512"
    depends_on:
      - mysql
    networks:
      - workplan_network
    restart: unless-stopped
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    # Health check - temporarily disabled
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:3101/health || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: workplan_frontend
    ports:
      - "3011:3011"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3101
      NODE_ENV: production
      # Next.js performance optimizations
      NODE_OPTIONS: "--max-old-space-size=512"
    depends_on:
      - backend
    networks:
      - workplan_network
    restart: unless-stopped
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    # Health check - temporarily disabled
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:3011 || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  # Nginx reverse proxy for better performance
  nginx:
    image: nginx:alpine
    container_name: workplan_nginx
    ports:
      - "80:80"
      # - "443:443"  # Commented out - no SSL certificates
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      # - ./ssl:/etc/nginx/ssl  # Commented out - no SSL certificates
    depends_on:
      - frontend
      - backend
    networks:
      - workplan_network
    restart: unless-stopped
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  mysql_data:
    driver: local

networks:
  workplan_network:
    driver: bridge
    # Network optimization
    driver_opts:
      com.docker.network.bridge.name: workplan_br0
