version: '3.8'

services:
  # Frontend Service
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: workplan-frontend-dev
    ports:
      - "3011:3011"
    volumes:
      # Mount source code สำหรับ hot reload
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://192.168.0.94:3101
    depends_on:
      - backend
    networks:
      - workplan-network
    restart: unless-stopped

  # Backend Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: workplan-backend-dev
    ports:
      - "3101:3101"
    volumes:
      # Mount source code สำหรับ hot reload
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DB_HOST=192.168.0.94
      - DB_USER=root
      - DB_PASSWORD=123456
      - DB_NAME=workplan
      - DB_PORT=3306
    depends_on:
      - mysql
    networks:
      - workplan-network
    restart: unless-stopped

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: workplan-mysql-dev
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=workplan
      - MYSQL_USER=workplan_user
      - MYSQL_PASSWORD=workplan_pass
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-config.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
      - workplan-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: workplan-nginx-dev
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - workplan-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  workplan-network:
    driver: bridge
